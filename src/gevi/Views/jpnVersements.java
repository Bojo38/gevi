/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jpnVersements.java
 *
 * Created on 29 avr. 2009, 21:37:22
 */
package gevi.Views;

import gevi.Model.Creneau;
import gevi.Model.Document;
import gevi.Model.Executant;
import gevi.Model.Versement;
import gevi.Model.Visite;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultListModel;

/**
 *
 * @author root.106572700130
 */
public class jpnVersements extends javax.swing.JPanel {

    Document _data;
    Vector<Versement> _versements = null;
    Vector _operations = null;
    Date _debut;
    Date _fin;

    public jpnVersements(Document doc) {
        this(doc, null, null);
    }

    /** Creates new form jpnVersements */
    public jpnVersements(Document doc, Date debut, Date fin) {
        initComponents();
        _data = doc;
        _debut = debut;
        _fin = fin;

        DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < doc.getRemplacants().size(); i++) {
            model.addElement(doc.getRemplacants().get(i).getNom() + ", " + doc.getRemplacants().get(i).getPrenom());
        }
        jlsMedecins.setModel(model);
        _versements = new Vector();
        _operations = new Vector();
        mtVersement modelVer = new mtVersement(_versements);
        jxtVersements.setModel(modelVer);
        jxtVersements.setDefaultRenderer(String.class, modelVer);
        jxtVersements.setDefaultRenderer(Double.class, modelVer);
        jxtVersements.setDefaultRenderer(Integer.class, modelVer);
        mtOperation modelOpe = new mtOperation(_operations);
        jxtOperations.setModel(modelOpe);
        jxtOperations.setDefaultRenderer(String.class, modelOpe);
        jxtOperations.setDefaultRenderer(Double.class, modelOpe);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlsMedecins = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jxtVersements = new org.jdesktop.swingx.JXTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jxtOperations = new org.jdesktop.swingx.JXTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Medecins"));

        jlsMedecins.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlsMedecins.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlsMedecinsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlsMedecins);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.WEST);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Versements"));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(316, 150));

        jxtVersements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jxtVersements.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jxtVersementsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jxtVersements);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Op√©rations"));
        jPanel2.setPreferredSize(new java.awt.Dimension(534, 200));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setPreferredSize(new java.awt.Dimension(302, 200));

        jxtOperations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jxtOperations);

        jPanel2.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jlsMedecinsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlsMedecinsValueChanged
        _versements.clear();
        for (int i = 0; i < _data.getVersements().size(); i++) {
            Versement v = _data.getVersements().get(i);
            String tmp = v.getExecutant().getNom() + ", " + v.getExecutant().getPrenom();
            Object[] selected = jlsMedecins.getSelectedValues();
            for (int j = 0; j < selected.length; j++) {
                if (tmp.equals(selected[j])) {
                    if ((_debut == null) && (_fin == null)) {
                        _versements.add(v);
                    }
                    else
                    {
                        if ((v.getDate().before(_fin)&&v.getDate().after(_debut))||v.getDate().equals(_fin)||v.getDate().equals(_fin))
                        {
                            _versements.add(v);
                        }
                    }
                }
            }
        }
        _operations.clear();

        mtVersement modelVer = new mtVersement(_versements);
        jxtVersements.setModel(modelVer);
        jxtVersements.setDefaultRenderer(String.class, modelVer);
        jxtVersements.setDefaultRenderer(Double.class, modelVer);
        jxtVersements.setDefaultRenderer(Integer.class, modelVer);
        mtOperation modelOpe = new mtOperation(_operations);
        jxtOperations.setModel(modelOpe);
        jxtOperations.setDefaultRenderer(String.class, modelOpe);
        jxtOperations.setDefaultRenderer(Double.class, modelOpe);

    }//GEN-LAST:event_jlsMedecinsValueChanged

    private void jxtVersementsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtVersementsMouseClicked
        _operations.clear();
        for (int i = 0; i < _data.getCreneaux().size(); i++) {
            Creneau c = _data.getCreneaux().get(i);
            int id = jxtVersements.getSelectedRow();
            if (id >= 0) {
                id = _versements.get(id).getId();
            }

            if (c.getAstreinte()) {
                if (c.getVersementId() == id) {
                    _operations.add(c);
                }
            }

            for (int j = 0; j < c.getVisites().size(); j++) {
                Visite v = c.getVisites().get(j);
                if (v.getVersementId() == id) {
                    _operations.add(v);
                }
            }
        }
        mtOperation modelOpe = new mtOperation(_operations);
        jxtOperations.setModel(modelOpe);
        jxtOperations.setDefaultRenderer(String.class, modelOpe);
        jxtOperations.setDefaultRenderer(Double.class, modelOpe);
    }//GEN-LAST:event_jxtVersementsMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList jlsMedecins;
    private org.jdesktop.swingx.JXTable jxtOperations;
    private org.jdesktop.swingx.JXTable jxtVersements;
    // End of variables declaration//GEN-END:variables

    public Executant getMedecin() {
        Executant e = null;

        if ((jlsMedecins.getSelectedIndices().length == 1) && (jlsMedecins.getSelectedIndex() >= 0)) {
            e = _data.getRemplacants().get(jlsMedecins.getSelectedIndex());
        }

        return e;
    }

    public Versement getVersement() {
        Versement e = null;

        if ((jxtVersements.getSelectedRowCount() == 1) && (jxtVersements.getSelectedRow() >= 0)) {
            e = _versements.get(jxtVersements.getSelectedRow());
        }
        return e;
    }

    public void refreshVersements() {
        _versements.clear();
        for (int i = 0; i < _data.getVersements().size(); i++) {
            Versement v = _data.getVersements().get(i);
            String tmp = v.getExecutant().getNom() + ", " + v.getExecutant().getPrenom();
            Object[] selected = jlsMedecins.getSelectedValues();
            for (int j = 0; j < selected.length; j++) {
                if (tmp.equals(selected[j])) {
                    if ((_debut == null) && (_fin == null)) {
                        _versements.add(v);
                    }
                    else
                    {
                        if ((v.getDate().before(_fin)&&v.getDate().after(_debut))
                                ||v.getDate().equals(_fin)
                                ||v.getDate().equals(_debut))
                        {
                            _versements.add(v);
                        }
                    }
                }
            }
        }
        _operations.clear();

        mtVersement modelVer = new mtVersement(_versements);
        jxtVersements.setModel(modelVer);
        jxtVersements.setDefaultRenderer(String.class, modelVer);
        jxtVersements.setDefaultRenderer(Double.class, modelVer);
        jxtVersements.setDefaultRenderer(Integer.class, modelVer);
        mtOperation modelOpe = new mtOperation(_operations);
        jxtOperations.setModel(modelOpe);
        jxtOperations.setDefaultRenderer(String.class, modelOpe);
        jxtOperations.setDefaultRenderer(Double.class, modelOpe);

        repaint();
    }
}
